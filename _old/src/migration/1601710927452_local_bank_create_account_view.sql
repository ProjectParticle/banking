-------------------------------------------
-- Create account view
-------------------------------------------

-------------------------------------------
-- Generated by: Database Migration
-- Developer: KeenDev team
-- Website: https://www.keendev.team
-- Github: https://github.com/keendev-team
-------------------------------------------

CREATE EXTENSION IF NOT EXISTS "pgcrypto" SCHEMA <%- migration.schemaName %>;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>md5(bytea) returns text AS $$
	SELECT encode(digest($1, 'md5'), 'hex')
$$ LANGUAGE SQL STRICT IMMUTABLE;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_account_history_view_name(
	account_number char
	)
	returns text
	language plpgsql STRICT IMMUTABLE
	AS $$

		BEGIN
			return '<%- migration.schemaName %>.<%- databaseItemsPrefix %>' || <%- migration.schemaName %>.<%- databaseItemsPrefix %>md5(account_number::bytea) || '_history';
		END;
	$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>create_account_history_view (
	account_number char
	)

	returns void
	language plpgsql
	AS $$

	DECLARE
		account_id varchar;
		view_name varchar;
		sql varchar;

	BEGIN

		SELECT <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_account_history_view_name(account_number) INTO view_name;

		IF EXISTS(
			SELECT table_schema 
			FROM information_schema.tables 
			WHERE 
			table_schema = '<%- migration.schemaName %>' AND 
			table_type = 'VIEW' AND
			table_name = view_name
		) THEN
			return;
		END IF;
		
		sql = 'CREATE OR REPLACE VIEW ' || view_name ||
				' AS SELECT * FROM <%- migration.schemaName %>.<%- databaseItemsPrefix %>transaction WHERE' ||
				' account_number=''' || account_number || ''' ORDER BY timestamp DESC';

		EXECUTE sql;
	end;

	$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_balance (account_number char(34))
	returns decimal
	language plpgsql
	AS $$

	DECLARE
		view_name varchar;
		current_balance decimal;
		sql varchar;

	BEGIN
		-- Create view if not exists
		PERFORM <%- migration.schemaName %>.<%- databaseItemsPrefix %>create_account_history_view(account_number);

		-- Calculate view name
		SELECT <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_account_history_view_name(account_number) INTO view_name;
	
		-- prepare SQL statement
		sql = 'SELECT balance FROM ' || view_name || ' LIMIT 1';

		EXECUTE sql INTO current_balance;

		-- return either balance or 0
		return COALESCE(current_balance, 0);
	END

	$$;
