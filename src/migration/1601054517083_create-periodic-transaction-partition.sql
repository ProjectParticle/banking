-------------------------------------------
-- Partition maker
-------------------------------------------

-------------------------------------------
-- Generated by: Database Migration
-- Developer: KeenDev team
-- Website: https://www.keendev.team
-- Github: https://github.com/keendev-team
-------------------------------------------

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_transaction_partition_name(period int)
	returns varchar
	language plpgsql
	AS $$

	DECLARE
		schema_name varchar := '<%- migration.schemaName %>';
		table_name varchar := concat('"', schema_name, '"', '.<%- databaseItemsPrefix %>transaction_', period);

	BEGIN
		return table_name;
	end;
$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>create_periodic_transaction_partition(period int)
	returns void
	language plpgsql
	AS $$

	DECLARE
		table_name varchar;
		sql varchar;

	BEGIN

		SELECT <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_transaction_partition_name(period) INTO table_name;

		sql = 'CREATE TABLE IF NOT EXISTS ' || table_name ||
							' PARTITION OF <%- migration.schemaName %>.<%- databaseItemsPrefix %>transaction' ||
							' FOR VALUES IN (' || period || ')';

		EXECUTE sql;
	end;
$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>add_indices_to_transaction_partition (period int)
	returns void
	language plpgsql
	AS $$
		DECLARE
			table_name varchar;
			sql varchar;
		BEGIN

			SELECT <%- migration.schemaName %>.<%- databaseItemsPrefix %>get_transaction_partition_name(period) INTO table_name;

			sql = 'CREATE INDEX IF NOT EXISTS transaction_period_timestamp_index ON ' || table_name || ' (period desc, account_number asc, timestamp desc)';
			EXECUTE sql;

			sql = 'CREATE INDEX IF NOT EXISTS transaction_period_account_number_timestamp_index ON ' || table_name || ' (period desc, account_number asc, timestamp desc)';
			EXECUTE  sql;
		END
	$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>create_transaction_period(period int)
	returns void
	language plpgsql
	AS $$

	BEGIN
		EXECUTE <%- migration.schemaName %>.<%- databaseItemsPrefix %>create_periodic_transaction_partition(period);
		EXECUTE <%- migration.schemaName %>.<%- databaseItemsPrefix %>add_indices_to_transaction_partition(period);
	end;
$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>current_period()
	returns int
	language plpgsql
	AS $$
		BEGIN
			return to_number(to_char(now(), 'YYYYMM'), '999999');
		end;
	$$;

create or replace function <%- migration.schemaName %>.<%- databaseItemsPrefix %>current_period(at timestamp)
	returns int
	language plpgsql
	AS $$
		BEGIN
			return to_number(to_char(at, 'YYYYMM'), '999999');
		end;
	$$;
